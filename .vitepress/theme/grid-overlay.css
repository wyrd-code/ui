/*
Pure CSS Grid Overlay from
https://codepen.io/larsenwork/pen/MJxZZE
*/
:root {
  /* Global settings */
  --grid-display: block; /* Toggle grid visibility with "block" or "none" */
  --grid-z_index: 1000; /* The z-index should be bigger than any used on the site */

  /* Grid settings */
  --media-query: 'Base';
  --grid-columns: 6;
  --grid-baseline: 16px;
  --grid-baseline-top: 1px; /* Must be smaller than grid-baseline */
  --grid-offset: 0;
  --grid-gutter: 32px;
  --grid-color: 190, 100%, 45%; /* hsl value */
  --grid-vertical-opacity: 0.3;
  --grid-horisontal-opacity: 0.2;
}

/**
 * Override grid settings at bigger screen sizes
 * Add/remove depending on how many you need
@media (min-width: 560px) {
  :root {
    --media-query: 'Small';
    --grid-offset: 32px;
    --grid-gutter: 12px;
    --grid-color: 10, 100%, 58%;
  }
}

@media (min-width: 768px) {
  :root {
    --media-query: 'Medium';
    --grid-columns: 12;
    --grid-offset: 40px;
    --grid-gutter: 16px;
    --grid-color: 190, 100%, 45%;
  }
}

@media (min-width: 1100px) {
  :root {
    --media-query: 'Large';
    --grid-offset: 48px;
    --grid-color: 10, 100%, 58%;
    --grid-max_width: 1184px;
  }
}
*/

/**
 * "Mixins"
 * You probably don't need to edit anything here.
 */
:root {
  --grid-vertical-color: hsla(var(--grid-color), var(--grid-vertical-opacity));
  --grid-horizontal-color: hsla(
    var(--grid-color),
    var(--grid-horisontal-opacity)
  );
  --grid-vertical-lines: linear-gradient(
    to right,
    var(--grid-vertical-color),
    var(--grid-vertical-color) 1px,
    transparent 1px,
    transparent calc(100% - var(--grid-gutter) - 1px),
    var(--grid-vertical-color) calc(100% - var(--grid-gutter) - 1px),
    var(--grid-vertical-color) calc(100% - var(--grid-gutter)),
    transparent calc(100% - var(--grid-gutter)),
    transparent
  );
  --grid-horizontal-lines: linear-gradient(
    transparent var(--grid-baseline-top),
    var(--grid-horizontal-color) var(--grid-baseline-top),
    var(--grid-horizontal-color) calc(var(--grid-baseline-top) + 1px),
    transparent calc(var(--grid-baseline-top) + 1px)
  );
}

/**
 * Styling
 * Using pseudos on <html> but could also use <body> or a <div id="app"> type thing.
 */
.grid-overlay {
  @apply relative;
  /* position: relative;
  min-width: 100vw;
  min-height: 100vh; */
}

.grid-overlay::before,
.grid-overlay::after {
  display: var(--grid-display);
  z-index: var(--grid-z_index);
}

.grid-overlay::before {
  content: var(--media-query, 'Unknown Media Query');
  position: fixed;
  top: 0;
  left: 0;
  color: var(--grid-vertical-color);
}

.grid-overlay::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: calc(100% - 2 * var(--grid-offset));
  max-width: var(--grid-max_width, none);
  margin-right: auto;
  margin-left: auto;
  background-image: var(--grid-vertical-lines), var(--grid-horizontal-lines);
  background-size: calc((100% + var(--grid-gutter)) / var(--grid-columns))
    var(--grid-baseline);
  pointer-events: none;
  z-index: var(--grid-z_index);
}
